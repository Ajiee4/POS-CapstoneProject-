@model POS_CapstoneProject_.Models.Ingredient
@inject IHttpContextAccessor HttpContextAccessor
@inject POS_CapstoneProject_.Data.POS_CapstoneProject_Context data
@{
    Layout = "/Views/Shared/_ManagerLayout.cshtml";
}
<style>
    .link-inventorylist, .inventoryMenu {
        background-color: #C6976C !important;
    }
</style>

<div class="inventory-wrapper">
 
    <button type="button" class="addIngredientBtn" data-toggle="modal" data-target="#addIngredientModal">Add Item</button>
    <button class="btn requestBtn" onclick="displayModal('Request')" type="button">Request</button>
    <button type="button" class="stockOutBtn" onclick="displayModal('StockOut')">Stock Out</button>

  
    <table class="inventory-table">
        <thead>
            <tr>
                <th>ID</th>
                <th>Name</th>
                <th>Unit of<br /> Measurement</th>
                <th>Quantity</th>
                <th>Stock<br /> Threshold</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in ViewData["IngredientsList"] as List<Ingredient>)
            {
             
                var checkRequest = data.RequestDetails.Where(s => s.IngredientId == item.IngredientId && s.Request.Status == "Pending").FirstOrDefault();

                <tr  data-id="@item.IngredientId" data-name="@item.Name" onclick="requestitem(event,@item.IngredientId,'@item.Name',1)">

                    <td data-label="ID">@item.IngredientId</td>
                    <td data-label="Name">@item.Name</td>
                    <td data-label="Unit of Measurement">@item.UnitOfMeasurement</td>
                    <td data-label="Quantity" data-quantity="@item.Quantity" class="ingredientQuanti">@item.Quantity</td>
                    <td data-label="Threshold">@item.LowStockThreshold</td>
                    <td data-label="Actions">                     
                    <div class="action-wrapper">
                        <div class="action-button">
                            <button class="btn updateIngredientBtn" onclick="DefaultUpdateIngredientModal(@item.IngredientId, '@item.Name','@item.UnitOfMeasurement', @item.LowStockThreshold)"
                                data-toggle="modal" data-target="#updateIngredientModal">
                                Update
                            </button>                                  
                        </div>

                        @if (item.Quantity < item.LowStockThreshold)
                        {
                            if (checkRequest != null)
                            {
                                <div class="warning-icon-wrapper">
                                    <span>Requested</span>
                                </div>
                            }
                            else
                            {
                                <div class="action-warning">
                                    <div class="warning-icon-wrapper">
                                        <img src="~/images/exclamation-mark.png" class="warning-icon" />
                                    </div>
                                </div>
                            }
                        }
                        else
                        {
                            if (checkRequest != null)
                            {
                                <div class="warning-icon-wrapper">
                                    <span>Requested</span>
                                </div>
                            }
                        }
                    </div>
                    </td>
                </tr>
            }
        </tbody>
    </table> 
</div>
<br />

<!--Request-->
@{
    // var requestid = data.Request.Max(s => s.RequestId);
    var dateNow = DateTime.Now.Date.ToString("yyyy-MM-dd");
    var user = data.UserDetail.FirstOrDefault(s => s.UserId == HttpContextAccessor.HttpContext.Session.GetInt32("UserID"));

}
<div class="request-list-wrapper closeRequestList">

    <div class="request-content-wrapper">
        <img src="~/images/close.png" class="exitRequest" />

        <div class="request-list-header">
            <h1 class="">Request</h1>

            <div class="description">
                <p><strong>Date: <br /></strong> @dateNow</p>
                <p><strong>Requested By:<br /> </strong> @user.Firstname @user.Lastname</p>
            </div>
        </div>
       

        <div class="styled-table-container">
            <table class="styled-table text-center">
                <thead>
                    <tr>
                        <th style="width: 10%"></th>
                        <th style="width: 50%">Name</th>
                        <th style="width: 40%">Quantity</th>
                    </tr>
                </thead>

                <tbody>

                </tbody>
            </table>
        </div>
        <div class="request-list-footer">
            <form asp-action="AddRequest" method="post" id="requestForm">
                <input name="requestData" class="requestInput" hidden />
            </form>

            <button class="d-block mx-auto requestSubmit">Request</button>
            <button class="d-block mx-auto cancelrequest">Cancel</button>
        </div>
    </div>
    
</div>


<br /><br />


<!--Stock Out-->

<div class="stock-out-wrapper closeStockOutList">

    <div class="stock-out-content-wrapper">
        <img src="~/images/no.png" class="exitStockOut" />

        <div class="stock-out-header">
            <h1 class="">Stock Out</h1>

            <div class="description">
                <p><strong>Date: <br /></strong> @dateNow</p>
                <p><strong>Stock Out By:<br /> </strong> @user.Firstname @user.Lastname</p>
            </div>
        </div>
        <div class="styled-table-container">
            <table class="styled-table text-center">
                <thead>
                    <tr>
                        <th style="width: 10%"></th>
                        <th style="width: 50%">Name</th>
                        <th style="width: 40%">Quantity</th>
                    </tr>
                </thead>
                <tbody>
                </tbody>
            </table>
        </div>
     
        <div class="stock-out-footer">
         
            <form asp-action="StockOut" method="post" id="stockOutForm">
                <input name="stockOutData" class="stockOutInput" hidden />
                <label>Remarks</label>
                <select name="remarks" class="stockOutRemarks">
                    <option value="Disposed">Disposed</option>
                    <option value="Damaged">Damaged</option>
                    <option value="Sold">Sold</option>
                </select>
            </form>
            <div class="footer-buttons-wrapper">

                <button class="stockOutSubmit">Stock Out</button>
                <button class="cancelStockOut">Cancel</button>
            </div>

        </div>
    </div>
   

   
</div>

@* <!--Stock Out-->

<div class="stock-out-wrapper">
    <img src="~/images/no.png" class="exitStockOut" />
   
    <h1 class="stock-out-header">Stock Out</h1>



    <div class="stock-out-th">
        <div class="th-delete" style="color: transparent">s</div>
        <div class="th-name">Name</div>
        <div class="th-quantity">Qty</div>
    </div>

    <div class="stock-out-table-wrapper">

        <table class="stock-out-table">
            <tbody>
            </tbody>
        </table>
    </div>

    <div class="stock-out-footer">
        <form asp-action="StockIn" method="post" id="stockInForm">
            <input name="stockInData" class="stockInInput" hidden />
        </form>

        <button class="d-block mx-auto stockOutSubmit">Stock Out</button>
    </div>
</div>
 *@



<!--Add New Ingredient Modal-->

<div class="modal fade" id="addIngredientModal" tabindex="-1" role="dialog" >
    <div class="modal-dialog  modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">ADD INGREDIENT</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form asp-action="AddIngredient" id="addIngredientForm" method="post">

                    <div class="form-group">
                        <label asp-for="Name" class="control-label">Ingredient Name</label>
                        <input asp-for="Name" class="form-control inputIngredientName" type="text" placeholder="Enter Ingredient Name" required />                        
                    </div>
                    <div class="form-group">
                        <label asp-for="UnitOfMeasurement" class="control-label">Unit of Measurement</label>
                        <input asp-for="UnitOfMeasurement" class="form-control inputMeasurement" placeholder="Enter Unit of Measurement" required />
                    </div>
                   
                    <div class="form-group">
                        <label asp-for="LowStockThreshold" class="control-label">Stock Threshold</label>
                        <input asp-for="LowStockThreshold" step="1" class="form-control inputThreshold" placeholder="Enter Low Stock Threshold" required />
                    </div>

                    <br />
                    <div class="form-group">
                        <button type="button" class="d-block mx-auto addIngredientSubmit">ADD</button>
                    </div>            
                </form>
            </div>
        </div>
    </div>
</div>


<!--Update Ingredient Modal-->

<div class="modal fade" id="updateIngredientModal" tabindex="-1" role="dialog">
    <div class="modal-dialog  modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">UPDATE INGREDIENT</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form asp-action="UpdateIngredient" id="updateIngredientForm" method="post">

                    <input asp-for="IngredientId" class="inputIngredientId" hidden />

                    <div class="form-group">
                        <label asp-for="Name" class="control-label">Category Name</label>
                        <input asp-for="Name" class="form-control inputIngredientName" type="text" placeholder="Enter Ingredient Name" required />
                    </div>
                    <div class="form-group">
                        <label asp-for="UnitOfMeasurement" class="control-label">Unit of Measurement</label>
                        <input asp-for="UnitOfMeasurement" class="form-control inputMeasurement" placeholder="Enter Unit of Measurement" required />
                    </div>
                   
                    <div class="form-group">
                        <label asp-for="LowStockThreshold" class="control-label">Stock Threshold</label>
                        <input asp-for="LowStockThreshold" class="form-control inputThreshold" placeholder="Enter Low Stock Threshold" required />
                    </div>

                    <br />
                    <div class="form-group">
                        <button type="button" class="d-block mx-auto updateIngredientSubmit">UPDATE</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<!--Pop up Messages-->
@if (TempData["AddIngredient"] != null)
{
    <script>
        Swal.fire({
            text: "Ingredient Added",
            icon: "success",
            showConfirmButton: false,
            timer: 2000
        });


    </script>

}


@if (TempData["AddIngredient"] != null)
{
    <script>
        Swal.fire({
            text: "Ingredient Added",
            icon: "success",
            showConfirmButton: false,
            timer: 2000
        });
    </script>

}
@if (TempData["Exist"] != null)
{
    <script>
        Swal.fire({
            text: "Ingredient already exist",
            icon: "error",
            showConfirmButton: false,
            timer: 2000
        });
    </script>
}
@if (TempData["StockIn"] != null)
{
    <script>
        Swal.fire({
            text: "Stock In Complete",
            icon: "success",
            showConfirmButton: false,
            timer: 2000
        });
    </script>
}

@if (TempData["StockOut"] != null)
{
    <script>
        Swal.fire({
            text: "Stock Out Complete",
            icon: "success",
            showConfirmButton: false,
            timer: 2000
        });
    </script>
}
@if (TempData["NoChanges"] != null)
{
    <script>
        Swal.fire({
            text: "No changes have been made",
            icon: "info",
            showConfirmButton: false,
            timer: 2000
        });
    </script>
}
@if (TempData["UpdateIngredient"] != null)
{
    <script>
        Swal.fire({
            text: "Ingredient Updated",
            icon: "success",
            showConfirmButton: false,
            timer: 2000
        });
    </script>
}
@if (TempData["AddRequest"] != null)
{
    <script>
        Swal.fire({
            text: "Request Complete",
            icon: "success",
            showConfirmButton: false,
            timer: 2000
        });
    </script>
}

<script>
    let ingredientListQuanti = @Html.Raw(Json.Serialize(ViewData["IngredientsList"]));
</script>