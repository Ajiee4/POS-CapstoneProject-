@model POS_CapstoneProject_.Models.Ingredient
@{
    Layout = "/Views/Shared/_ManagerLayout.cshtml";
}
<style>
    .link-inventorylist, .inventoryMenu {
        background-color: #C6976C !important;
    }
</style>

<div class="inventory-wrapper">
  @*   <button>In/Out</button> *@
    <button type="button" class="addIngredientBtn" data-toggle="modal" data-target="#addIngredientModal">Add Item</button>

    <table class="inventory-table">

        <thead>
            <tr>
                <th>ID</th>
                <th>Name</th>             
                <th>Unit of<br /> Measurement</th>
                <th>Quantity</th>              
                <th>Stock<br /> Threshold</th>
                <th>Actions</th>
            </tr>
        </thead>

        <tbody>


            @foreach (var item in ViewData["IngredientsList"] as List<Ingredient>)
            {
              <tr>

                    
                  
                  <td data-label="ID">@item.IngredientId</td>
                  <td data-label="Name">@item.Name</td>

                   <td data-label="Unit of Measurement">@item.UnitOfMeasurement</td>
                   <td data-label="Quantity" class="@(item.Quantity < item.LowStockThreshold ? "belowThreshold" : "")">
                       
                        @item.Quantity
                   </td>
                 
                 
             
                 
                  <td data-label="Threshold">@item.LowStockThreshold</td>
                  <td data-label="Actions">
                      <!---->
                      @*   <button class="btn InOutBtn" data-id="@item.IngredientId" data-toggle="modal" data-target="#choiceIngredientModal">In/Out</button> *@

                        <div class="action-wrapper">
                            <div class="action-button">
                                <button class="btn updateIngredientBtn" onclick="UpdateIngredient(@item.IngredientId, '@item.Name','@item.UnitOfMeasurement', @item.LowStockThreshold)"
                                        data-toggle="modal" data-target="#updateIngredientModal">
                                    Update
                                </button>
                                @if (item.Quantity < item.LowStockThreshold)
                                {
                                    <button class="btn btn-dark" type="button">Request</button>
                                   
                                }
                            </div>
                                @if (item.Quantity < item.LowStockThreshold)
                                {
                                    <div class="action-warning">
                                        <div class="warning-icon-wrapper">
                                            <img src="~/images/exclamation-mark.png" class="warning-icon" />
                                        </div>
                                    </div>
                                }                                                
                        </div>
                       

                  </td>
              </tr>
            }
        </tbody>
    </table>
</div>

<!--Add New Ingredient Modal-->

<div class="modal fade" id="addIngredientModal" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog  modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">ADD INGREDIENT</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form asp-action="AddIngredient" id="addIngredientForm" method="post">

                    <div class="form-group">
                        <label asp-for="Name" class="control-label">Category Name</label>
                        <input asp-for="Name" class="form-control inputIngredientName" type="text" placeholder="Enter Ingredient Name" required />                        
                    </div>
                    <div class="form-group">
                        <label asp-for="UnitOfMeasurement" class="control-label">Unit of Measurement</label>
                        <input asp-for="UnitOfMeasurement" class="form-control inputMeasurement" placeholder="Enter Unit of Measurement" required />
                    </div>
                   
                    <div class="form-group">
                        <label asp-for="LowStockThreshold" class="control-label">Stock Threshold</label>
                        <input asp-for="LowStockThreshold" step="1" class="form-control inputThreshold" placeholder="Enter Low Stock Threshold" required />
                    </div>

                    <br />
                    <div class="form-group">
                        <button type="button" class="d-block mx-auto addIngredientSubmit">ADD</button>
                    </div>            
                </form>
            </div>
        </div>
    </div>
</div>


<!--Update Ingredient Modal-->

<div class="modal fade" id="updateIngredientModal" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog  modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">UPDATE INGREDIENT</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form asp-action="UpdateIngredient" id="updateIngredientForm" method="post">

                    <input asp-for="IngredientId" class="inputIngredientId" hidden />

                    <div class="form-group">
                        <label asp-for="Name" class="control-label">Category Name</label>
                        <input asp-for="Name" class="form-control inputIngredientName" type="text" placeholder="Enter Ingredient Name" required />
                    </div>
                    <div class="form-group">
                        <label asp-for="UnitOfMeasurement" class="control-label">Unit of Measurement</label>
                        <input asp-for="UnitOfMeasurement" class="form-control inputMeasurement" placeholder="Enter Unit of Measurement" required />
                    </div>
                   
                    <div class="form-group">
                        <label asp-for="LowStockThreshold" class="control-label">Stock Threshold</label>
                        <input asp-for="LowStockThreshold" class="form-control inputThreshold" placeholder="Enter Low Stock Threshold" required />
                    </div>

                    <br />
                    <div class="form-group">
                        <button type="button" class="d-block mx-auto updateIngredientSubmit">UPDATE</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>


<!--Choice Modal-->

<div class="modal fade" id="choiceIngredientModal" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog  modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">CHOOSE</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
             
                <div class="choices-wrapper">
                    <button data-dismiss="modal" data-toggle="modal" data-target="#stockInIngredientModal">Stock In</button>
                    <button data-dismiss="modal" data-toggle="modal" data-target="#stockOutIngredientModal">Stock Out</button>
                </div>
            </div>
        </div>
    </div>
</div>

<!--Stock In Modal-->

<div class="modal fade" id="stockInIngredientModal" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog  modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Stock In</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">

                <form asp-action="StockInIngredient" id="stockInIngredientForm" method="post">

                    <input asp-for="IngredientId" class="inputIngredientId" hidden />
                    <input name="StockInType" value="Stock In"  hidden />
                    <div class="form-group">
                        <label asp-for="Quantity" class="control-label">Quantity</label>
                        <input asp-for="Quantity" class="form-control inputQuantity" oninput="this.value = this.value.replace(/[^0-9]/g, '');" placeholder="Enter Quantity To Stock In" required />
                    </div>

                    <br />
                    <div class="form-group">
                        <button type="button" class="d-block mx-auto stockInIngredientSubmit">STOCK IN</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<!--Stock Out Modal-->

<div class="modal fade" id="stockOutIngredientModal" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog  modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Stock OUT</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">

                <form asp-action="StockOutIngredient" id="stockOutIngredientForm" method="post">

                    <input asp-for="IngredientId" class="inputIngredientId" hidden />
                    <input name="StockInType" value="Stock Out" hidden />
                    <div class="form-group">
                        <label asp-for="Quantity" class="control-label">Quantity</label>
                        <input asp-for="Quantity" class="form-control inputQuantity" oninput="this.value = this.value.replace(/[^0-9]/g, '');" placeholder="Enter Quantity To Stock In" required />
                    </div>
                    <div class="form-group">
                        <label  class="control-label">Remarks</label>
                        <select name="remarks" class="form-control">
                            <option value="Discarded">Discarded</option>
                            <option value="Expired">Expired</option>
                            <option value="Consumed">Consumed</option>
                        </select>
                     
                    </div>

                    <br />
                    <div class="form-group">
                        <button type="button" class="d-block mx-auto stockOutIngredientSubmit">STOCK OUT</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

@if (TempData["AddIngredient"] != null)
{
    <script>
        Swal.fire({
            text: "Ingredient Added",
            icon: "success",
            showConfirmButton: false,
            timer: 2000
        });


    </script>

}

@if (TempData["Exist"] != null)
{
    <script>
        Swal.fire({
            text: "Ingredient already exist",
            icon: "error",
            showConfirmButton: false,
            timer: 2000
        });
    </script>
}
@if (TempData["StockIn"] != null)
{
    <script>
        Swal.fire({
            text: "Stock In Complete",
            icon: "success",
            showConfirmButton: false,
            timer: 2000
        });
    </script>
}
@if (TempData["Insufficient"] != null)
{
    <script>
        Swal.fire({
            text: "Insufficient Quantity",
            icon: "error",
            showConfirmButton: false,
            timer: 2000
        });
    </script>
}


@if (TempData["StockOut"] != null)
{
    <script>
        Swal.fire({
            text: "Stock Out Complete",
            icon: "success",
            showConfirmButton: false,
            timer: 2000
        });
    </script>
}
@if (TempData["UpdateIngredient"] != null)
{
    <script>
        Swal.fire({
            text: "Ingredient Updated",
            icon: "success",
            showConfirmButton: false,
            timer: 2000
        });
    </script>
}