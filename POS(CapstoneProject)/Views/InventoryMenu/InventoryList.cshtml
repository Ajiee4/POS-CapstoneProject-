@model POS_CapstoneProject_.Models.Ingredient
@inject IHttpContextAccessor HttpContextAccessor
@inject POS_CapstoneProject_.Data.POS_CapstoneProject_Context data
@{
    Layout = "/Views/Shared/_ManagerLayout.cshtml";

    var ingredientList = ViewData["IngredientsList"] as List<Ingredient>;
    var requestid = data.Request.ToList();
    var dateNow = DateTime.Now.Date.ToString("yyyy-MM-dd");
    var user = data.UserDetail.FirstOrDefault(s => s.UserId == HttpContextAccessor.HttpContext.Session.GetInt32("UserID"));
}
<style>
    .link-inventorylist, .inventoryMenu {
        background-color: #747474 !important;
    }
</style>

<!--Loader-->
<div class="loader-wrapper">
    <div class="loader"></div>
</div>
<!--Inventory Wrapper-->
<div class="inventory-wrapper">
    <div class="inventory-button-wrapper">
        <button type="button" class="addIngredientBtn general-button" data-toggle="modal" data-target="#addIngredientModal">
            <img src="~/images/add.png" />
            <span>Add Item</span>
        </button>

        <button class="btn requestBtn general-button" onclick="displayModal('Request')" type="button">
            <img src="~/images/requestproduct.png" />
            <span>Request</span>
        </button>

        <button type="button" class="stockOutBtn general-button" onclick="displayModal('StockOut')">
            <img src="~/images/stockout.png" />
            <span>Stock Out</span>
        </button>
    </div>
    <!--Inventory List Table-->
    <table class="inventory-table general-table">
        <thead>
            <tr>
                <th>ID</th>
                <th>Name</th>
                <th>Unit of<br /> Measurement</th>
                <th>Quantity</th>
                <th>Stock<br /> Threshold</th>
                <th>Action</th>
            </tr>
        </thead>

        <tbody>
            @if (ingredientList != null)
            {
                @foreach (var item in ingredientList)
                {
                    var checkRequest = data.RequestDetails.Where(s => s.IngredientId == item.IngredientId && s.Request.Status == "Pending").FirstOrDefault();

                    <tr data-id="@item.IngredientId" data-name="@item.Name" onclick="requestitem(event,@item.IngredientId,'@item.Name',1)">
                        <td data-label="ID">@item.IngredientId</td>
                        <td data-label="Name">@item.Name</td>
                        <td data-label="Unit">@item.UnitOfMeasurement</td>
                        <td data-label="Quantity" data-quantity="@item.Quantity" class="ingredientQuanti">@item.Quantity</td>
                        <td data-label="Threshold">@item.LowStockThreshold</td>
                        <td data-label="Actions">
                            <div class="action-wrapper">
                                <div class="action-button">
                                    <button class="updateIngredientBtn general-update-btn" data-placement="bottom" title="Update" onclick="DefaultUpdateIngredientModal(@item.IngredientId, '@item.Name','@item.UnitOfMeasurement', @item.LowStockThreshold)"data-toggle="modal" data-target="#updateIngredientModal">
                                        <img src="~/images/edit.png" />
                                    </button>
                                </div>

                                @if (item.Quantity < item.LowStockThreshold)
                                {
                                    if (checkRequest != null)
                                    {
                                        <div class="warning-icon-wrapper">
                                            <span class="request-text" onclick="redirectRequest('@Url.Action("RequestList", "InventoryMenu")', event)">Requested</span>
                                        </div>
                                    }
                                    else
                                    {
                                        <div class="action-warning">
                                            <div class="warning-icon-wrapper">
                                                <img src="~/images/exclamation-mark.png" class="warning-icon" />
                                            </div>
                                        </div>
                                    }
                                }
                                else
                                {
                                    if (checkRequest != null)
                                    {
                                        <div class="warning-icon-wrapper">
                                            <span class="request-text" onclick="redirectRequest('@Url.Action("RequestList", "InventoryMenu")', event)">Requested</span>
                                        </div>
                                    }
                                }
                            </div>
                        </td>
                    </tr>
                }
            }       
        </tbody>
    </table> 
</div>

@{
   
}
<!--Request List Wrapper-->
<div class="request-list-wrapper closeRequestList">
    <img src="~/images/coffe-logo-light.png" class="request-ingredient-modal-img" />

    <div class="request-content-wrapper">   
        <button type="button" class="close exitRequest">
            <span aria-hidden="true">&times;</span>
        </button>

        <div class="request-list-header">
            <h1 class="">@(requestid.Count != 0 ? $"Request #{requestid.Count + 1}" : "Request #1")</h1>

            <div class="description">
                <p><strong>Date: <br /></strong> @dateNow</p>
                <p><strong>Requested By:<br /> </strong> @user?.Firstname @user?.Lastname</p>
            </div>
        </div>
       
        <div class="styled-table-container">
            <table class="styled-table text-center">
                <thead>
                    <tr>
                        <th style="width: 10%"></th>
                        <th style="width: 50%">Name</th>
                        <th style="width: 40%">Quantity</th>
                    </tr>
                </thead>

                <tbody>
                </tbody>
            </table>
        </div>

        <div class="request-list-footer">
            <form asp-action="AddRequest" method="post" id="requestForm">
                <input name="requestData" class="requestInput" hidden />
            </form>

            <button class="d-block mx-auto requestSubmit">REQUEST</button>
            <button class="d-block mx-auto cancelrequest" onclick="cancelRequest()">CANCEL</button>
        </div>
    </div>  
</div>

<!--Stock Out List-->
<div class="stock-out-wrapper closeStockOutList">
    <img src="~/images/coffe-logo-light.png" class="stockout-ingredient-modal-img" />

    <div class="stock-out-content-wrapper">      
        <button type="button" class="close exitStockOut">
            <span aria-hidden="true">&times;</span>
        </button>

        <div class="stock-out-header">
            <h1 class="">Stock Out</h1>

            <div class="description">
                <p><strong>Date: <br /></strong> @dateNow</p>
                <p><strong>Stock Out By:<br /> </strong> @user?.Firstname @user?.Lastname</p>
            </div>
        </div>

        <div class="styled-table-container">
            <table class="styled-table text-center">
                <thead>
                    <tr>
                        <th style="width: 10%"></th>
                        <th style="width: 50%">Name</th>
                        <th style="width: 40%">Quantity</th>
                    </tr>
                </thead>

                <tbody>
                </tbody>
            </table>
        </div>
     
        <div class="stock-out-footer">       
            <form asp-action="StockOut" method="post" id="stockOutForm">
                <input name="stockOutData" class="stockOutInput" hidden />

                <label>Remarks</label>

                <select name="remarks" class="stockOutRemarks">
                    <option value="Disposed">Disposed</option>
                    <option value="Expired">Expired</option>
                    <option value="Damaged">Damaged</option>
                    <option value="Out for Production">Out for Production</option>
                </select>
            </form>

            <div class="footer-buttons-wrapper">
                <button class="stockOutSubmit">STOCK OUT</button>
                <button class="cancelStockOut" onclick="cancelStockOut()">CANCEL</button>
            </div>
        </div>
    </div> 
</div>

<!--Add Ingredient Modal-->
<div class="modal fade general-modal" id="addIngredientModal" tabindex="-1" role="dialog">
    <div class="modal-dialog  modal-dialog-centered" role="document">
        <div class="modal-content">
            <img src="~/images/coffe-logo-light.png" class="add-ingredient-modal-img general-coffee-img-top" />

            <div class="modal-header">
                <h5 class="modal-title">ADD INGREDIENT</h5>

                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>

            <div class="modal-body">
                <form asp-action="AddIngredient" id="addIngredientForm" method="post">
                    <div class="form-group">
                        <label asp-for="Name" class="control-label general-modal-label">Ingredient Name</label>
                        <input asp-for="Name" maxlength="20" class="form-control inputIngredientName general-modal-input" oninput="validateIngredientName(this)" type="text" placeholder="Enter Ingredient Name" required />
                    </div>

                    <div class="form-group">
                        <label asp-for="UnitOfMeasurement" class="control-label general-modal-label">Unit of Measurement</label>
                        <input asp-for="UnitOfMeasurement" maxlength="20" class="form-control inputMeasurement general-modal-input" oninput="validateUnitMeasurement(this)" placeholder="Enter Unit of Measurement" required />
                    </div>
                   
                    <div class="form-group">
                        <label asp-for="LowStockThreshold" class="control-label general-modal-label">Stock Threshold</label>
                        <input asp-for="LowStockThreshold" type="text" maxlength="10" class="form-control inputThreshold general-modal-input" oninput="validateThreshold(this)" placeholder="Enter Low Stock Threshold" required />
                    </div>
               
                    <div class="form-group">
                        <button type="button" class="d-block mx-auto addIngredientSubmit general-modal-button">ADD</button>
                    </div>            
                </form>
            </div>
        </div>
    </div>
</div>

<!--Update Ingredient Modal-->
<div class="modal fade general-modal" id="updateIngredientModal" tabindex="-1" role="dialog">
    <div class="modal-dialog  modal-dialog-centered" role="document">
        <div class="modal-content">
            <img src="~/images/coffe-logo-light.png" class="update-ingredient-modal-img general-coffee-img-bottom" />

            <div class="modal-header">
                <h5 class="modal-title">UPDATE INGREDIENT</h5>

                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>

            <div class="modal-body">
                <form asp-action="UpdateIngredient" id="updateIngredientForm" method="post">
                    <input asp-for="IngredientId" class="inputIngredientId" hidden />

                    <div class="form-group">
                        <label asp-for="Name" class="control-label general-modal-label">Ingredient Name</label>
                        <input asp-for="Name" maxlength="20" class="form-control inputIngredientName general-modal-input" oninput="validateIngredientName(this)" type="text" placeholder="Enter Ingredient Name" required />
                    </div>

                    <div class="form-group">
                        <label asp-for="UnitOfMeasurement" class="control-label general-modal-label">Unit of Measurement</label>
                        <input asp-for="UnitOfMeasurement" maxlength="20" class="form-control inputMeasurement general-modal-input" oninput="validateUnitMeasurement(this)" placeholder="Enter Unit of Measurement" required />
                    </div>
                   
                    <div class="form-group">
                        <label asp-for="LowStockThreshold" class="control-label general-modal-label">Stock Threshold</label>
                        <input asp-for="LowStockThreshold" type="text" maxlength="10" class="form-control inputThreshold general-modal-input" oninput="validateThreshold(this)" placeholder="Enter Low Stock Threshold" required />
                    </div>
               
                    <div class="form-group">
                        <button type="button" class="d-block mx-auto updateIngredientSubmit general-modal-button">UPDATE</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<!--Pop up Messages-->

<!--Add Ingredient-->
@if (TempData["AddIngredient"] != null)
{
    <script>
        Swal.fire({
            text: "Ingredient Added",
            icon: "success",
            showConfirmButton: false,
            timer: 2000
        });
    </script>
}
<!--Ingredient already Exist-->
@if (TempData["Exist"] != null)
{
    <script>
        Swal.fire({
            text: "Ingredient Already Exists",
            icon: "error",
            showConfirmButton: false,
            timer: 2000
        });
    </script>
}
<!--Stock Out-->
@if (TempData["StockOut"] != null)
{
    <script>
        Swal.fire({
            text: "Stock Out Complete",
            icon: "success",
            showConfirmButton: false,
            timer: 2000
        });
    </script>
}
<!--No changes have been made when updating the ingredient-->
@if (TempData["NoChanges"] != null)
{
    <script>
        Swal.fire({
            text: "No changes have been made",
            icon: "info",
            showConfirmButton: false,
            timer: 2000
        });
    </script>
}
<!--Update Ingredient-->
@if (TempData["UpdateIngredient"] != null)
{
    <script>
        Swal.fire({
            text: "Ingredient Updated",
            icon: "success",
            showConfirmButton: false,
            timer: 2000
        });
    </script>
}
<!--Add Request-->
@if (TempData["AddRequest"] != null)
{
    <script>
        Swal.fire({
            text: "Request Complete",
            icon: "success",
            showConfirmButton: false,
            timer: 2000
        });
    </script>
}

<script>
    let ingredientListQuanti = @Html.Raw(Json.Serialize(ViewData["IngredientsList"]));
</script>