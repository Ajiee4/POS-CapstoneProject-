@inject POS_CapstoneProject_.Data.POS_CapstoneProject_Context data
@{
    Layout = "/Views/Shared/_ManagerLayout.cshtml";
}

<style>
    .link-requestlist, .inventoryMenu {
        background-color: #C6976C !important;
    }
</style>

<div class="request-list-wrapper"> 
    <div class="note">
        <p>
            <b>Note</b>:
        </p>
        <ul>
            <li>Ingredients with a quantity of zero will not be included in the Stock Movement record.</li>
            <li>Inventory Level will be updated once the request is complete.</li>
        </ul>     
    </div>
    <div class="request-pending-wrapper">
        <h1 class="request-header">PENDING</h1>
        <div class="request-pending-grid">
            @foreach (var item in ViewData["RequestPending"] as List<Request>)
            {
                var employeeName = data.UserDetail.Where(s => s.UserId == item.UserId).FirstOrDefault();
                var count = data.RequestDetails.Where(s => s.RequestId == item.RequestId).Sum(s => s.Quantity);

                <div class="request-card" data-id="@item.RequestId" data-status="Pending">
                    <div class="card-id">
                        <b>Request Id:</b> 
                        @item.RequestId
                    </div>
                    <div class="card-date">
                        <b>Request Date:</b> 
                        @item.RequestDate.ToString("yyyy-MM-dd")
                    </div>
                    <div class="card-name">
                        <b>Requested By:</b>
                        @employeeName.Firstname @employeeName.Lastname
                    </div>
                    <div class="card-total-quantity">
                        <b>Total Quantity:</b> 
                        @count
                    </div>
                </div>              
            }
        </div>
    </div>

    <div class="request-completed-wrapper">
        <h1 class="request-header">COMPLETED</h1>
        <div class="request-completed-grid">
            @foreach (var item in ViewData["RequestComplete"] as List<Request>)
            { 
                var employeeName = data.UserDetail.Where(s => s.UserId == item.UserId).FirstOrDefault();
                var count = data.RequestDetails.Where(s => s.RequestId == item.RequestId).Sum(s => s.Quantity);

                <div class="request-card" data-id="@item.RequestId" data-status="Completed">
                    <div class="card-id">
                        <b>Request Id:</b> 
                        @item.RequestId
                    </div>
                    <div class="card-date">
                        <b>Request Date:</b> 
                        @item.RequestDate.ToString("yyyy-MM-dd")
                    </div>
                    <div class="card-name">
                        <b>Requested By:</b>
                        @employeeName.Firstname @employeeName.Lastname
                    </div>
                    <div class="card-total-quantity">
                        <b>Total Quantity:</b> 
                        @count
                    </div>
                </div>
            }
        </div>
    </div>
    <div class="request-completed-wrapper">
        <h1 class="request-header">CANCELED</h1>
        <div class="request-completed-grid">
            @foreach (var item in ViewData["RequestCanceled"] as List<Request>)
            {
                var employeeName = data.UserDetail.Where(s => s.UserId == item.UserId).FirstOrDefault();
                var count = data.RequestDetails.Where(s => s.RequestId == item.RequestId).Sum(s => s.Quantity);

                <div class="request-card" data-id="@item.RequestId" data-status="Completed">
                    <div class="card-id">
                        <b>Request Id:</b>
                        @item.RequestId
                    </div>
                    <div class="card-date">
                        <b>Request Date:</b>
                        @item.RequestDate.ToString("yyyy-MM-dd")
                    </div>
                    <div class="card-name">
                        <b>Requested By:</b>
                        @employeeName.Firstname @employeeName.Lastname
                    </div>
                    <div class="card-total-quantity">
                        <b>Total Quantity:</b>
                        @count
                    </div>
                </div>
            }
        </div>
    </div>
</div>

<div class="modal fade" id="requestCardModal" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">REQUEST</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>          
            <div class="modal-body">
               <div class="request-card-modal-header">
                   <div class="request-card-modal-name">Ingredient</div>
                   <div class="request-card-modal-quantity">Quantity</div>
                  
               </div>
               <div class="request-card-table-wrapper">
                   <table class="request-card-table">
                       <form asp-action="UpdateRequest" method="post" id="FormRequestUpdate">
                           <input name="requestData" class="inputRequestUpdate" hidden />
                           <input name="requestId" class="inputRequestId" hidden />
                       </form>
                        <form asp-action="CancelRequest" method="post" id="FormRequestCancel">
                            
                            <input name="requestId" class="inputRequestIdcancel" hidden />
                        </form>
                        <tbody id="requestDetailsTableBody">
                            <!-- Dynamic content will go here -->
                        </tbody>
                   </table>
               </div>
               <br />

               <div class="request-modal-buttons">
                    <button class="completeRequestBtn">Complete Request</button>
                    <button class="cancelRequestBtn">Cancel Request</button>
               </div>
              
            </div>
        </div>
    </div>

</div>

@if (TempData["UpdateRequest"] != null)
{
    <script>
        Swal.fire({
            text: "Request Complete",
            icon: "success",
            showConfirmButton: false,
            timer: 2000
        });
    </script>
}
@if (TempData["CancelRequest"] != null)
{
    <script>
        Swal.fire({
            text: "Request Canceled",
            icon: "success",
            showConfirmButton: false,
            timer: 2000
        });
    </script>
}


<script>
    function showCardModal() {
        let cards = document.querySelectorAll('.request-card');
        let allDetails = @Html.Raw(ViewData["RequestDetails"]);

        cards.forEach(card => {
            card.addEventListener('click', function () {
                let requestID = card.dataset.id;

               
                let tableBody = document.getElementById('requestDetailsTableBody');
                tableBody.innerHTML = '';

              
                let filteredDetails = allDetails.filter(detail => detail.RequestId == requestID);

               
                filteredDetails.forEach(deta => {
                    let row = `<tr>
                                  <td>${deta.Ingredient.Name}</td>
                                  <td>
                                       <input class="inputQtyRequest" data-id="${deta.IngredientId}" onchange="changeQtyRequest(this)" oninput="validateQtyRequest(this)" value="${deta.Quantity}" />
                                  </td>
                                 
                                  
                               </tr>`;
                    tableBody.innerHTML += row;
                });

                localStorage.setItem('requestList', JSON.stringify(filteredDetails));
              

               
                $('#requestCardModal').modal('show');
            });
        });
    }

    showCardModal();

</script>
