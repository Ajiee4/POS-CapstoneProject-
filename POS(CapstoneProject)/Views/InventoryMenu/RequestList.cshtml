@inject POS_CapstoneProject_.Data.POS_CapstoneProject_Context data
@using Newtonsoft.Json;
@{
    Layout = "/Views/Shared/_ManagerLayout.cshtml";
}

<style>
    .link-requestlist, .inventoryMenu {
        background-color: #747474 !important;
    }
</style>

<div class="loader-wrapper">
    <div class="loader"></div>
</div>


<!--Filter Request-->
<div class="request-filter-wrapper"> 
    <form asp-action="RequestList" method="post" id="requestFilterForm">      
            <div class="request-status-wrapper">
                <label>Status</label>
                <select class="selectRequestStatus" name="requestStatus">
                    <option selected disabled>Select a type</option>
                    <option value="Pending">Pending</option>
                    <option value="Completed">Completed</option>
                    <option value="Canceled">Canceled</option>
                </select>
            </div>

            <div class="request-fromdate-wrapper">
                 <label>From</label>
                 <input type="date" class="fromDate" name="fromDate"/>
            </div>

            <div class="request-todate-wrapper">
                <label>To</label>
                <input type="date" class="toDate" name="toDate" />
            </div> 

            <div class="request-button-wrapper">
                <button type="button" class="viewRequestBtn">View</button>
            </div>      
    </form>
</div>
<!--Request List-->
<div class="list-request-wrapper">
 
    <h1 class="list-request-header"></h1>
    <div class="list-request-grid">
        <!--Pending Requests-->
        @if (ViewData["RequestPending"] != null)
        {

            <script>
                window.addEventListener('load', function () {
                    document.querySelector('.fromDate').value = localStorage.getItem('fromDateRequest');
                    document.querySelector('.toDate').value = localStorage.getItem('toDateRequest');
                    document.querySelector('.selectRequestStatus').value = "Pending";
                    document.querySelector('.list-request-header').textContent = "PENDING";
                });
              

            </script>
            var requestPending = ViewData["RequestPending"] as string;
            var requestPendingList = JsonConvert.DeserializeObject<List<Request>>(requestPending);


            if (requestPendingList != null)
            {
                if (requestPendingList.Count == 0)
                {
                    <p class="noResultPara">No Pending Requests Found</p>
                }
                else
                {
                    foreach (var item in requestPendingList.Where(s => s.Status == "Pending"))
                    {
                        var employee = data.UserDetail.Where(s => s.UserId == item.UserId).FirstOrDefault();

                        <div class="request-card" data-id="@item.RequestId" data-status="Pending">
                            <div class="card-id">
                                <b>Request Id:</b> @item.RequestId
                            </div>
                            <div class="card-date">
                                <b>Request Date:</b> @item.RequestDate.ToString("yyyy-MM-dd")
                            </div>
                            <div class="card-name">
                                <b>Requested By:</b> @employee?.Firstname @employee?.Lastname
                            </div>
                        </div>
                    }
                }
            }
            else
            {

            }

        }
        <!-- Completed Requests -->
        @if (ViewData["RequestCompleted"] != null)
        {
         
            <script>

                window.addEventListener('load', function () {
                    document.querySelector('.fromDate').value = localStorage.getItem('fromDateRequest');
                    document.querySelector('.toDate').value = localStorage.getItem('toDateRequest');
                    document.querySelector('.selectRequestStatus').value = "Completed";
                    document.querySelector('.list-request-header').textContent = "COMPLETED";
                });

                                      
            </script>
            var requestCompleted = ViewData["RequestCompleted"] as string;
            var requestCompletedList = JsonConvert.DeserializeObject<List<Request>>(requestCompleted);

            if (requestCompletedList != null)
            {
                if (requestCompletedList.Count == 0)
                {
                    <p class="noResultPara">No Completed Requests Found</p>
                }
                else
                {
                    foreach (var item in requestCompletedList.Where(s => s.Status == "Completed"))
                    {
                        var employee = data.UserDetail.Where(s => s.UserId == item.UserId).FirstOrDefault();

                        <div class="request-card" data-id="@item.RequestId" data-status="Completed">
                            <div class="card-id">
                                <b>Request Id:</b> @item.RequestId
                            </div>
                            <div class="card-date">
                                <b>Request Date:</b> @item.RequestDate.ToString("yyyy-MM-dd")
                            </div>
                            <div class="card-name">
                                <b>Requested By:</b> @employee?.Firstname @employee?.Lastname
                            </div>
                        </div>
                    }
                }
            }
            else
            {
                
            }

        }

      
        <!--Canceled Requests-->
        @if (ViewData["RequestCanceled"] != null)
        {
            
            <script>

                window.addEventListener('load', function () {
                    document.querySelector('.fromDate').value = localStorage.getItem('fromDateRequest');
                    document.querySelector('.toDate').value = localStorage.getItem('toDateRequest');
                    document.querySelector('.selectRequestStatus').value = "Canceled";
                    document.querySelector('.list-request-header').textContent = "CANCELED";
                });
              
              
            </script>
            var requestCanceled = ViewData["RequestCanceled"] as string;
            var requestCanceledList = JsonConvert.DeserializeObject<List<Request>>(requestCanceled);


            if (requestCanceledList != null)
            {
                if (requestCanceledList.Count == 0)
                {
                    <p class="noResultPara">No Canceled Requests Found</p>
                }
                else
                {
                    foreach (var item in requestCanceledList.Where(s => s.Status == "Canceled"))
                    {
                        var employee = data.UserDetail.Where(s => s.UserId == item.UserId).FirstOrDefault();

                        <div class="request-card" data-id="@item.RequestId" data-status="Canceled">
                            <div class="card-id">
                                <b>Request Id:</b> @item.RequestId
                            </div>
                            <div class="card-date">
                                <b>Request Date:</b> @item.RequestDate.ToString("yyyy-MM-dd")
                            </div>
                            <div class="card-name">
                                <b>Requested By:</b> @employee?.Firstname @employee?.Lastname
                            </div>
                        </div>
                    }
                }
            }
            else
            {
                
            }

        }
    </div>
</div>

<!---Request Detail Modal-->
<div class="modal fade general-modal" id="requestCardModal" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">REQUEST</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
             
                <div class="request-card-table-wrapper">
                    <table class="request-card-table">
                        <form asp-action="UpdateRequest" method="post" id="FormRequestUpdate">
                            <input name="requestData" class="inputRequestUpdate" hidden />
                            <input name="requestId" class="inputRequestId" hidden />
                        </form>
                        <form asp-action="CancelRequest" method="post" id="FormRequestCancel">

                            <input name="requestId" class="inputRequestIdcancel" hidden />
                        </form>
                        <thead>
                            <tr>
                                <th>Ingredient</th>
                                <th>Quantity</th>
                            </tr>
                        </thead>
                        <tbody id="requestDetailsTableBody">
                         
                        </tbody>
                    </table>
                </div>
                <br />

                <div class="request-modal-buttons">
                    <button class="completeRequestBtn">Complete Request</button>
                    <button class="cancelRequestBtn">Cancel Request</button>
                </div>

            </div>
        </div>
    </div>
</div>

<!--Pop up messages-->
@if (ViewData["UpdateRequest"] != null)
{
    <script>
        Swal.fire({
            text: "Request Complete",
            icon: "success",
            showConfirmButton: false,
            timer: 2000
        });
    </script>
}
@if (ViewData["CancelRequest"] != null)
{
    <script>
        Swal.fire({
            text: "Request Canceled",
            icon: "success",
            showConfirmButton: false,
            timer: 2000
        });
    </script>
}

<script>
    let requestDetails = @Html.Raw(ViewData["RequestDetails"]);
</script>

