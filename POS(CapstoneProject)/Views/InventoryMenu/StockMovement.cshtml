@inject POS_CapstoneProject_.Data.POS_CapstoneProject_Context data
@{
    Layout = "/Views/Shared/_ManagerLayout.cshtml";
}

<style>
    .link-stockmovement, .inventoryMenu {
        background-color: #C6976C !important;
    }
</style>

<!--Transaction Type Filter-->
<div class="stock-movement-filter-wrapper">
    <form asp-action="DisplayStockMovement" method="post" id="stockMovementForm">
        <div class="stock-movement-type-wrapper">
            <label>Type</label>
            <select class="selectTransactionType" name="transactionType">
                <option selected disabled>Select a type</option>
                <option value="All">All</option>
                <option value="Stock In">Stock In</option>
                <option value="Stock Out">Stock Out</option>
            </select>
        </div>

        <div class="stock-movement-fromdate-wrapper">
            <label>From</label>
            <input type="date" class="fromDateStockMove" name="fromDate" />
        </div>
        <div class="stock-movement-todate-wrapper">
            <label>To</label>
            <input type="date" class="toDateStockMove" name="toDate" />
        </div>

        <div class="stock-movement-button-wrapper">
            <button type="button" class="generateRecordBtn">View</button>
        </div>      
    </form>
</div>

<!--Stock Movement Table-->
<div class="stock-movement-wrapper" style="display: none;">
    <table class="stock-movement-table" >
        <thead>
            <tr>
                <th>ID</th>
                <th>Request ID</th>
                <th>User</th>
                <th>Type</th>
                <th>Ingredient</th>
                <th>Quantity</th>
                <th>Date</th>
                <th>Remarks</th>
            </tr>
        </thead>
        <tbody id="stock-movement-body">
          
            @if (TempData["inventoryAll"] != null)
            {
                var inventoryAll = ViewData["All"] as List<InventoryTransactionDetail>;
         
                if(inventoryAll != null)
                {
                    @foreach (var item in inventoryAll)
                    {
                        var checkUser = data.UserDetail.Where(s => s.UserId == item.InventoryTransaction.UserId).FirstOrDefault();

                        <tr>
                            <td data-label="ID">@item.InventoryTransactId</td>
                            <td data-label="Request Id">@(item.InventoryTransaction.RequestId != null ? item.InventoryTransaction.RequestId : "")</td>
                            <td data-label="User">@checkUser?.Firstname @checkUser?.Lastname</td>
                            <td data-label="Type">@item.InventoryTransaction?.TransactionType</td>
                            <td data-label="Ingredient">@item.Ingredient?.Name</td>
                            <td data-label="Quantity">@item.Quantity</td>
                            <td data-label="Date">@item.InventoryTransaction?.TransactionDate.ToString("yyyy-MM-dd")</td>
                            <td data-label="Remarks">@item.Remarks</td>
                        </tr>
                    }
                }
                else
                {
                   
                }           
            }

            @if (TempData["inventoryStockIn"] != null)
            {
                var inventoryStockIn = ViewData["StockIn"] as List<InventoryTransactionDetail>;

                if (inventoryStockIn != null)
                {
                    @foreach (var item in inventoryStockIn)
                    {
                        var checkUser = data.UserDetail.Where(s => s.UserId == item.InventoryTransaction.UserId).FirstOrDefault();

                        <tr>
                            <td data-label="ID">@item.InventoryTransactId</td>
                            <td data-label="Request Id">@(item.InventoryTransaction.RequestId != null ? item.InventoryTransaction.RequestId : "")</td>
                            <td data-label="User">@checkUser?.Firstname @checkUser?.Lastname</td>
                            <td data-label="Type">@item.InventoryTransaction?.TransactionType</td>
                            <td data-label="Ingredient">@item.Ingredient?.Name</td>
                            <td data-label="Quantity">@item.Quantity</td>
                            <td data-label="Date">@item.InventoryTransaction?.TransactionDate.ToString("yyyy-MM-dd")</td>
                            <td data-label="Remarks">@item.Remarks</td>
                        </tr>
                    }
                }
                else
                {
                   
                }
               
            }

            @if (TempData["inventoryStockOut"] != null)
            {
                var inventoryStockOut = ViewData["StockOut"] as List<InventoryTransactionDetail>;

                if (inventoryStockOut != null)
                {
                    @foreach (var item in inventoryStockOut)
                    {
                        var checkUser = data.UserDetail.Where(s => s.UserId == item.InventoryTransaction.UserId).FirstOrDefault();
                        
                        <tr>
                            <td data-label="ID">@item.InventoryTransactId</td>
                            <td data-label="Request Id">@(item.InventoryTransaction.RequestId != null ? item.InventoryTransaction.RequestId : "")</td>
                            <td data-label="User">@checkUser?.Firstname @checkUser?.Lastname</td>
                            <td data-label="Type">@item.InventoryTransaction?.TransactionType</td>
                            <td data-label="Ingredient">@item.Ingredient?.Name</td>
                            <td data-label="Quantity">@item.Quantity</td>
                            <td data-label="Date">@item.InventoryTransaction?.TransactionDate.ToString("yyyy-MM-dd")</td>
                            <td data-label="Remarks">@item.Remarks</td>
                        </tr>
                    }
                }
                else
                {
                  
                }
                
            }

        </tbody>
    </table>
</div>

@if (TempData["inventoryAll"] != null)
{
    <script>
        document.querySelector('.fromDateStockMove').value = localStorage.getItem('fromDateStockMove');
        document.querySelector('.toDateStockMove').value = localStorage.getItem('toDateStockMove');
        document.querySelector('.stock-movement-wrapper').style.display = "block";
        document.querySelector('.selectTransactionType').value = "All"
    </script>
}
@if (TempData["inventoryStockOut"] != null)
{
    <script>
        document.querySelector('.fromDateStockMove').value = localStorage.getItem('fromDateStockMove');
        document.querySelector('.toDateStockMove').value = localStorage.getItem('toDateStockMove');
        document.querySelector('.stock-movement-wrapper').style.display = "block";
        document.querySelector('.selectTransactionType').value = "Stock Out"
    </script>
}
@if (TempData["inventoryStockIn"] != null)
{
     <script>
        document.querySelector('.fromDateStockMove').value = localStorage.getItem('fromDateStockMove');
        document.querySelector('.toDateStockMove').value = localStorage.getItem('toDateStockMove');
        document.querySelector('.stock-movement-wrapper').style.display = "block";
        document.querySelector('.selectTransactionType').value = "Stock In"
    </script>
}
